<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"

       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context
       https://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">



    <!--这是一个基于注解的声明式事物-->
<context:component-scan base-package="com.atguigu.spring"></context:component-scan>

<!--导入外部的属性文件-->
 <context:property-placeholder location="classpath:jdbc.properties"></context:property-placeholder>

  <!--配置数据源-->
    <bean id="druidDataSource" class="com.alibaba.druid.pool.DruidDataSource">
        <property name="driverClassName" value="${jdbc.driver}"></property>
        <property name="url" value="${jdbc.url}"></property>
        <property name="username" value="${jdbc.username}"></property>
        <property name="password" value="${jdbc.password}"></property>
    </bean>

<!--    配置 JdbcTemplate-->
   <bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
<!-- 装配数据源-->
       <property name="dataSource" ref="druidDataSource"></property>
   </bean>

    <!--在spring的事物中添加事物配置所有·跟事务有关的信息都需要添加数据源-->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="druidDataSource"></property>
    </bean>
    <!-- 开启事物注解驱动，通过注解@Transactional 所标识的方法或表示的类中所有方法，都会被事务管理器管理事务
  transaction-manager 属性的默认值是transactionManager,如果事物管理器bean的id正好就是这个默认·，则可以省略这个属性-->
    <tx:annotation-driven transaction-manager="transactionManager"/>


</beans>